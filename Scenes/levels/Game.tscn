[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var in_game = $InGame

var player = null

var level = null

func _ready():
	add_level()
	connect_to_doors()
	check_for_door()
	pass

func add_level():
	level = load(str(\"res://Scenes/levels/level\", G.next_level_number, \"_\" , G.real_or_dream, \".tscn\")).instance()
	in_game.add_child(level)
	
	player = level.find_node(\"Player\")

func connect_to_doors():
	print(\"lets go\")
	for child in level.find_node(\"Objects\").get_children():
		if child.name.begins_with(\"Door\"):
			child.connect(\"enter_door\", self, \"_on_enter\")
		elif child.name.begins_with(\"Bed\"):
			child.connect(\"enter_bed\", self, \"_on_enter\")
		elif child.name.begins_with(\"Lever\"):
			print(\"signal empfangen\")
			child.connect(\"pulled_lever\", self, \"_on_enter_something\")

func _on_enter():
	get_tree().reload_current_scene()

func check_for_door():
	if G.next_level_door != null:
		var door = level.find_node(G.next_level_door)
		player.position = door.position
		G.next_level_door = null
	elif G.next_level_bed != null:
		var bed = level.find_node(G.next_level_bed)
		player.position = bed.position
		G.next_level_bed = null
"

[node name="Game" type="Node2D"]
script = SubResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="InGame" type="Node2D" parent="."]
